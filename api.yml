openapi: "3.0.0"
info:
  version: 1.0.0
  title: Lockdown app
  description: This is the api for the lockdown app
  termsOfService: http://swagger.io/terms/
  contact:
    name: Lock Down team
    email: nonem@swagger.io
    url: https://github.com/Lockdown-WirVsVirus/lockdown-app-backend
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://lockdown.api/api
paths:
  /ticket:
    post:
      description: Create a new Ticket Request
      operationId: addTicketRequest
      requestBody:
        description: Create a new TIcketRequest
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketPayload'
      responses:
        '200':
          description: Ticket Request response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketRequest'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /ticket/{id}:
    get:
      description: Returns a user based on a single ID
      operationId: getTicketRequest
      parameters:
        - name: id
          in: path
          description: ID of the ticket request
          required: true
          schema:
            type: integer
            format: int64
        - name: pin
          in: query
          description: Pin for the ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200': 
          description: Ticket request response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketRequest'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      delete:
        description: deletes a TicketRequest
        operationId: deletePet
        parameters:
          - name: id
            in: path
            description: ID to delete
            required: true
            schema:
              type: integer
              format: int64
          - name: pin
            in: path
            description: pin to of the ID to delete
            required: true
            schema:
              type: integer
              format: int64
        responses:
          '204':
            description: Ticket request deleted
          default:
            description: unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /ticket/findByPin:
    get:
      description: Returns all Ticket requests identified by the pin
      operationId: find ticket requests by pin
      parameters:
        - name: pin
          in: path
          description: pin of user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Ticket request response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketPayload'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    TicketRequest:
      oneOf:
        - $ref: '#/components/schemas/WorkTicketPayload'
        - $ref: '#/components/schemas/FoodTicketPayload'
        - $ref: '#/components/schemas/HealthTicketPayload'
        - $ref: '#/components/schemas/HelpTicketPayload'
        - $ref: '#/components/schemas/RecreationTicketPayload'
        - $ref: '#/components/schemas/FamilyTicketPayload'
        - type: object
      discriminator:
        propertyName: reason
        mapping:
          work: WorkTicketPayload
          food: FoodTicketPayload
          health: HealthTicketPayload
          help: HelpTicketPayload
          recreation: RecreationTicketPayload
          family: FamilyTicketPayload
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
    TicketPayload:
      type: object
      required:
        # Identify person
        - hashIdentityNumber
        - userPin
        # Identify request Leave
        - startPosition
        - finishPosition
        - reason
        - signature
        - leaveTime
      properties:
        hashIdentityNumber:
          type: string
        userPin:
          type: integer
        startPosition:
          type: object
          $ref: '#/components/schemas/Address'
        finishPosition:
          type: object
          $ref: '#/components/schemas/Address'
        reason:
          type: string
        signature:
          type: string
        leaveTime:
          type: string
          format: date-time
        arrivalTime:
          type: string
          format: date-time
    WorkTicketPayload:
      allOf:
        - $ref: '#/components/schemas/TicketPayload'
        - type: object
      required:
        - employerCode
      properties:
        employerCode: 
          type: string
    FoodTicketPayload:
      allOf:
        - $ref: '#/components/schemas/TicketPayload'
        - type: object    
    HealthTicketPayload:
      allOf:
        - $ref: '#/components/schemas/TicketPayload'
        - type: object    
    HelpTicketPayload:
      allOf:
        - $ref: '#/components/schemas/TicketPayload'
        - type: object    
    RecreationTicketPayload:
      allOf:
        - $ref: '#/components/schemas/TicketPayload'
        - type: object    
    FamilyTicketPayload:
      allOf:
        - $ref: '#/components/schemas/TicketPayload'
        - type: object    
    Address:
      type: object
      required:
        - street
        - houseNo
        - postalCode
        - city
      properties:
        street:
          type: string
        houseNo:
          type: integer
        postalCode:
          type: string
        city:
          type: string
        province:
          type: string
        country:
          type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string